const request = require('request');
function popup () {
  nameup.style.display = "block";
  msginput.disabled = true;
}
function userbtn () {
  if (tname.value.length >= 3 && tname.value.length <= 15) {
    nameup.style.display = "none";
    localStorage.setItem('name', tname.value);
    msginput.disabled = false;
  } else {
    alert('–ü–æ–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ, –∏–ª–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!');
  }
}
// —Å—Ç–∞—Ä—Ç, –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
function reqstart () {
  request('https://chatapi2.herokuapp.com/1', function (error, response, body) {
    //console.clear();
    console.log('statusCode:', response && response.statusCode);
    // —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã
    //error = 5;
    //response.statusCode = 404;
    if (response.statusCode == 200 && error == null) {
      reqread();
    } else {
      alert('–û —á—ë—Ä—Ç... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!');
    }
  });
  let test = localStorage.getItem('name');
  if (test == null) {
    popup();
  } else {
    console.log('üëç');
  }
  box.scrollTop = 1000000;
}
// —á—Ç–µ–Ω–∏–µ
function reqread () {
  request('https://chatapi2.herokuapp.com/1/read', function (error, response, body) {
    //console.clear();
    console.log('error:', error);
    console.log('statusCode:', response && response.statusCode);
    //if (txtn) {
    //  txtn.remove();
    //}
    while (box.firstChild) {
      box.removeChild(box.lastChild);
    }
    // –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    body = body.replace(/\n/g, '</div><div id="txtn" class="bubble">');
    body = body.replace(/;/g, ' : ');
    chatup(body);
  });
  setTimeout(reqread, 500);
}
// –æ—Ç–ø—Ä–∞–≤–∫–∞
function requp () {
  let user = encodeURIComponent(localStorage.getItem('name'));
  let msg = encodeURIComponent(msginput.value);
  msg = msg.replace(/ /g, '%20');
  if (msg != "") {
    request('https://chatapi2.herokuapp.com/1/write/' + user + '/' + msg, function (error, response, body) {
      //console.clear();
      console.log('error:', error);
    });
  } else {
    console.log('–ü—É—Å—Ç–æ =)');
  }
  msginput.value = "";
  box.scrollTop = 1000000;
}
// –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
function chatup (msg) {
  var upmsg = '<div id="txtn" class="bubble">' + msg + "</div>";
  box.insertAdjacentHTML("beforeend", upmsg);
}
//start
reqstart();
